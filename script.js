document.addEventListener("DOMContentLoaded", function () {
    const text = "Je suis actuellement Ã©tudiant au centre de formation CFA INSTA Ã  Paris, en premiÃ¨re annÃ©e de BTS SIO  avec une spÃ©cialisation en SLAM. Originaire dâ€™Italie, jâ€™ai grandi lÃ -bas avant de mâ€™installer en France en 2020, oÃ¹ jâ€™ai exercÃ© le mÃ©tier de barman. Cette expÃ©rience mâ€™a beaucoup appris sur moi-mÃªme et restera gravÃ©e en moi grÃ¢ce aux rencontres et aux souvenirs quâ€™elle mâ€™a offerts. Aujourdâ€™hui, je suis en pleine reconversion professionnelle. AprÃ¨s une profonde rÃ©flexion, jâ€™ai dÃ©cidÃ© de me tourner vers lâ€™informatique, une passion qui mâ€™anime depuis mon plus jeune Ã¢ge. Bien que le mÃ©tier de barman mâ€™ait beaucoup apportÃ©, jâ€™ai ressenti le besoin dâ€™explorer ce domaine qui me fascine tant. Ã€ travers ce site, vous dÃ©couvrirez mon Ã©cole, ma formation et les projets que je dÃ©veloppe actuellement. Bonne lecture !";

    let index = 0;
    const speed = 55;
    const typedTextElement = document.getElementById("typed-text");

    if (typedTextElement) { // âœ… VÃ©rifier que l'Ã©lÃ©ment existe
        function typeText() {
            if (index < text.length) {
                typedTextElement.innerHTML += text.charAt(index);
                index++;
                setTimeout(typeText, speed);
            }
        }

        const observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting && index === 0) {
                    typedTextElement.style.opacity = 1;
                    typeText();
                }
            });
        }, { threshold: 0.5 });

        observer.observe(typedTextElement);
    }
});

document.addEventListener("DOMContentLoaded", function () {
    const cvButton = document.getElementById("cvButton");
    const cvModal = document.getElementById("cvModal");
    const cvFrame = document.getElementById("cvFrame");
    const closeButton = document.querySelector(".close");

    if (cvButton && cvModal && cvFrame) {
        // ğŸ”¥ Supprimer tout src pour Ã©viter l'ouverture automatique
        cvFrame.removeAttribute("src");

        cvButton.addEventListener("click", function (event) {
            event.preventDefault(); // ğŸš« Bloque toute navigation automatique
            event.stopPropagation(); // ğŸš« EmpÃªche la propagation du clic

            // ğŸ”¥ Ne charge le fichier PDF qu'au premier clic
            if (!cvFrame.src || cvFrame.src === "about:blank") {
                cvFrame.setAttribute("src", "CV_Leonardo_Bonino.pdf"); // âœ… Remplace par le chemin rÃ©el
            }

            cvFrame.style.display = "block";
            cvModal.style.display = "flex";
        });
    }

    if (closeButton && cvModal) {
        closeButton.addEventListener("click", function () {
            cvModal.style.display = "none";
        });

        window.addEventListener("click", function (event) {
            if (event.target === cvModal) {
                cvModal.style.display = "none";
            }
        });
    }
});

document.addEventListener("DOMContentLoaded", function () {
    const btsContainer = document.querySelector(".bts-container");

    function handleScroll() {
        const scrollPosition = window.scrollY + window.innerHeight;
        const elementPosition = btsContainer.offsetTop;

        if (scrollPosition > elementPosition + 100) {
            btsContainer.classList.add("show");
        }
    }

    window.addEventListener("scroll", handleScroll);
});

document.addEventListener("DOMContentLoaded", function () {
    const items = document.querySelectorAll(".timeline-item");

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry, index) => {
            if (entry.isIntersecting && !entry.target.classList.contains("visible")) {
                entry.target.classList.add("visible");

                setTimeout(() => {
                    entry.target.style.opacity = 1;
                    entry.target.style.transform = "translateY(0)";
                }, index * 4000);

                observer.unobserve(entry.target); // Stop observer une fois visible
            }
        });
    }, {
        threshold: 0.1 // DÃ©tecte quand 10% de l'Ã©lÃ©ment est visible
    });

    items.forEach(item => {
        observer.observe(item);
    });
});

document.querySelectorAll('.timeline-item').forEach((item, index) => {
    item.classList.add(index % 2 === 0 ? 'left' : 'right');
});
